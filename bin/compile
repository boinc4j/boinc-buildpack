#!/usr/bin/env bash

# fail fast
set -eu

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

BIN_DIR="$(cd "$(dirname "$0")" && pwd)"
BP_DIR=$BIN_DIR/..
OPT_DIR=$BP_DIR/opt/
LIB_DIR=$BP_DIR/lib/

. $LIB_DIR/common.sh
. $LIB_DIR/db.sh
. $LIB_DIR/deps.sh
. $LIB_DIR/boinc.sh
. $LIB_DIR/apache2.sh
. $LIB_DIR/errors.sh

export_env_dir $ENV_DIR

REL_BOINC_PROJECT_DIR=boinc-project
BOINC_PROJECT_DIR=/app/$REL_BOINC_PROJECT_DIR

REL_BOINC_DIR=boinc-src
BOINC_DIR=/app/$REL_BOINC_DIR

USER_BOINC_DIR=$BUILD_DIR/boinc

CACHED_DIRS="$REL_BOINC_DIR $REL_BOINC_PROJECT_DIR .apt"

#########################
### Validate App & Setup
########################
if [ ! -d $BUILD_DIR/.heroku/php ]; then
  error "You must run the heroku/php buildpack first!"
fi
if [ -z "$HEROKU_APP_NAME" ]; then
  # Once dyno metadata is available, we can drop this
  error "You must set HEROKU_APP_NAME manually."
fi
if [ ! -d $USER_BOINC_DIR ]; then
  error "No app found in boinc dir!"
fi
if [ -n "${JAWSDB_URL:-""}" ]; then
  export_db_props "$JAWSDB_URL"
elif [ -n "${CLEARDB_DATABASE_URL:-""}" ]; then
  export_db_props "$CLEARDB_DATABASE_URL"
else
  error "You must provision a database: $ heroku addons:create cleardb"
fi

########################
# Unpack existing cache
########################
for DIR in $CACHED_DIRS; do
  if [ ! -d $BUILD_DIR/$DIR ]; then
    cache_copy $DIR $CACHE_DIR $BUILD_DIR
  else
    error "Directory $DIR already exists!
You must leave this name available for the buildpack"
  fi
done

########################
# Install dependencies
########################
if [ -n "${REINSTALL_DEPS:-""}" ] || [ ! -d $BUILD_DIR/.apt ]; then
  rm -rf $BUILD_DIR/.apt
  install_deps $BUILD_DIR "mysql-client python-mysqldb s3cmd"
else
  status "Using cached dependencies... "
fi

##########################
# Build BOINC from source
##########################
if [ -n "${REBUILD_BOINC:-""}" ] || [ ! -d $BUILD_DIR/$REL_BOINC_DIR ]; then
  mkdir -p $BOINC_DIR
  install_boinc $BOINC_DIR
else
  status "Using cached BOINC Server... "
  mv $BUILD_DIR/$REL_BOINC_DIR $BOINC_DIR
fi

######################
# Prepare the project
######################
status " Making BOINC Project... "
export PATH=$BUILD_DIR/.apt/usr/sbin:$BUILD_DIR/.apt/usr/bin:$PATH
export PYTHONPATH=$BUILD_DIR/.apt/usr/lib/python2.7/dist-packages
export PATH=/app/.heroku/php/bin:$BUILD_DIR/.heroku/php/bin:$PATH
if [ -d $BUILD_DIR/$REL_BOINC_PROJECT_DIR ]; then
  mv $BUILD_DIR/$REL_BOINC_PROJECT_DIR $BOINC_PROJECT_DIR
fi

boinc_make_project $BOINC_DIR $BOINC_PROJECT_DIR

##################
# Install the app
##################
boinc_prepare_downloads $BOINC_PROJECT_DIR

status "Installing BOINC App... "
boinc_install_app $BUILD_DIR $BOINC_DIR $BOINC_PROJECT_DIR $USER_BOINC_DIR

status "Customizing configuration..."
boinc_add_config $BOINC_PROJECT_DIR $USER_BOINC_DIR
boinc_create_start_script $BUILD_DIR $REL_BOINC_PROJECT_DIR
boinc_sub_project_name $BOINC_PROJECT_DIR

status "Updating app version..."
boinc_update_versions $BOINC_PROJECT_DIR

###################
# Clean up & Cache
###################
status "Finalizing slug contents... "
cd $BUILD_DIR
rm -rf $REL_BOINC_PROJECT_DIR
mv $BOINC_PROJECT_DIR $REL_BOINC_PROJECT_DIR

rm -rf $REL_BOINC_DIR
mv $BOINC_DIR $REL_BOINC_DIR

# repack cache with new assets
mkdir -p $CACHE_DIR
for DIR in $CACHED_DIRS; do
  cache_copy $DIR $BUILD_DIR $CACHE_DIR
done

# Remove build-only files from slug
rm -rf $REL_BOINC_DIR
#rm -rf .apt
rm -rf $USER_BOINC_DIR
rm $REL_BOINC_PROJECT_DIR/keys/code_sign_private

apache_enable_cgid
apache_add_index_php

if [ ! -f $BUILD_DIR/index.html ]; then
  cp $OPT_DIR/index.html $BUILD_DIR
fi
mkdir -p bin
cp $OPT_DIR/sync bin/sync

# TODO
# This needs to be done as late as possible because it updates
# the database with a version. But if something fails, the
# version will be stuck in an inconsistent state.
# But probably need builds in /app first
#status "Updating app version..."
#boinc_update_versions $REL_BOINC_PROJECT_DIR

# These files aren't needed at runtime. The files will have been
# copied into download dir if needed.
rm -rf $REL_BOINC_PROJECT_DIR/apps
