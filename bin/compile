#!/usr/bin/env bash

# fail fast
set -eu

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

BIN_DIR="$(cd "$(dirname "$0")" && pwd)"
BP_DIR=$BIN_DIR/..
OPT_DIR=$BP_DIR/opt/
LIB_DIR=$BP_DIR/lib/

. $LIB_DIR/common.sh
. $LIB_DIR/db.sh
. $LIB_DIR/deps.sh
. $LIB_DIR/boinc.sh

export_env_dir $ENV_DIR

# unpack existing cache
CACHED_DIRS="boinc-src .apt project"
for DIR in $CACHED_DIRS; do
  if [ ! -d $BUILD_DIR/$DIR ]; then
    cache_copy $DIR $CACHE_DIR $BUILD_DIR
  fi
done

if [ -n "${REINSTALL_DEPS:-""}" ] || [ ! -d $BUILD_DIR/.apt ]; then
  rm -rf $BUILD_DIR/.apt
  install_deps $BUILD_DIR "mysql-client python-mysqldb php5-cli"
  ln -s php5 $BUILD_DIR/.apt/usr/bin/php
else
  echo "-----> Using cached dependencies... "
fi

BOINC_DIR=/app/boinc-src
if [ -n "${REBUILD_BOINC:-""}" ] || [ ! -d $BUILD_DIR/boinc-src ]; then
  mkdir -p $BOINC_DIR
  install_boinc $BOINC_DIR
else
  echo "-----> Using cached BOINC Server... "
  mv $BUILD_DIR/boinc-src $BOINC_DIR
fi

echo "-----> Making BOINC Project... "

if [ -n "${JAWSDB_URL:-""}" ]; then
  export_db_props "$JAWSDB_URL"
elif [ -n "${CLEARDB_DATABASE_URL:-""}" ]; then
  export_db_props "$CLEARDB_DATABASE_URL"
else
  echo "ERROR: You must provision a database: heroku addons:create cleardb"
  exit 1
fi

export PATH=$BUILD_DIR/.apt/usr/sbin:$BUILD_DIR/.apt/usr/bin:$PATH
export PYTHONPATH=$BUILD_DIR/.apt/usr/lib/python2.7/dist-packages

# This probably needs to be scrubed in profile.d
export USER=$(whoami)

cd $BOINC_DIR

# Never create the db, but still load the schema
sed -i.bak s/cursor.execute\(\"create\ database/\#cursor.execute\(\"create\ database/g py/Boinc/database.py

if [ -f $BUILD_DIR/project/config.xml ]; then
  # There's a bug here. If the cache is purged, the make_project will fail because the tables exist
  # This really needs to check if the tables exist, not the config
  NO_DB="--no_db"
fi

if [ -z "$APP_NAME" ]; then
  # Once dyno metadata is available, we can drop this
  echo "ERROR: You must set APP_NAME manually."
  exit 1
fi

DB_OPTS="--db_host $DATABASE_HOST --db_name $DATABASE_NAME --db_user $DATABASE_USERNAME --db_passwd $DATABASE_PASSWORD ${NO_DB:-""}"
./tools/make_project $DB_OPTS \
                     --user_name $(whoami) --no_query --srcdir $BOINC_DIR --project_root /app/project \
                     --url_base "https://$APP_NAME.herokuapp.com" --project_host "$APP_NAME.herokuapp.com" \
                     boinc "BOINC Template" | indent

rm -rf $BUILD_DIR/project
mv /app/project $BUILD_DIR/project
cd - > /dev/null 2>&1

rm -rf $BUILD_DIR/boinc-src
mv $BOINC_DIR $BUILD_DIR/boinc-src

# populate profile.d
PROFILE_PATH="$BUILD_DIR/.profile.d/boinc.sh"
mkdir -p $(dirname $PROFILE_PATH)
echo "export PYTHONPATH=\$HOME/.apt/usr/lib/python2.7/dist-packages" >> $PROFILE_PATH

# repack cache with new assets
mkdir -p $CACHE_DIR
for DIR in $CACHED_DIRS; do
  cache_copy $DIR $BUILD_DIR $CACHE_DIR
done

# Remove build-only files from slug
rm -rf $BUILD_DIR/boinc-src $BUILD_DIR/.apt
